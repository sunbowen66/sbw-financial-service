<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sbw.finance.biz.mapper.MqMsgMapper">
  <resultMap id="BaseResultMap" type="com.sbw.finance.biz.domain.MqMsg">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="mq_topic" jdbcType="VARCHAR" property="mqTopic" />
    <result column="mq_tag" jdbcType="VARCHAR" property="mqTag" />
    <result column="mq_key" jdbcType="VARCHAR" property="mqKey" />
    <result column="msg_class_name" jdbcType="VARCHAR" property="msgClassName" />
    <result column="msg_status" jdbcType="TINYINT" property="msgStatus" />
    <result column="error_count" jdbcType="INTEGER" property="errorCount" />
    <result column="error_msg" jdbcType="VARCHAR" property="errorMsg" />
    <result column="request_id" jdbcType="VARCHAR" property="requestId" />
    <result column="disable" jdbcType="BIT" property="disable" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="member_id" jdbcType="BIGINT" property="memberId" />
    <result column="update_member_id" jdbcType="BIGINT" property="updateMemberId" />
    <result column="del_flag" jdbcType="BIT" property="delFlag" />
    <result column="tenant_id" jdbcType="BIGINT" property="tenantId" />
    <result column="data_no" jdbcType="VARCHAR" property="dataNo" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.sbw.finance.biz.domain.MqMsg">
    <result column="msg" jdbcType="LONGVARCHAR" property="msg" />
  </resultMap>
  <sql id="Base_Column_List">
    id, mq_topic, mq_tag, mq_key, msg_class_name, msg_status, error_count, error_msg, 
    request_id, disable, create_time, update_time, member_id, update_member_id, del_flag, 
    tenant_id, data_no
  </sql>
  <sql id="Blob_Column_List">
    msg
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from mq_msg
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from mq_msg
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.sbw.finance.biz.domain.MqMsg">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into mq_msg (mq_topic, mq_tag, mq_key, 
      msg_class_name, msg_status, error_count, 
      error_msg, request_id, disable, 
      create_time, update_time, member_id, 
      update_member_id, del_flag, tenant_id, 
      data_no, msg)
    values (#{mqTopic,jdbcType=VARCHAR}, #{mqTag,jdbcType=VARCHAR}, #{mqKey,jdbcType=VARCHAR}, 
      #{msgClassName,jdbcType=VARCHAR}, #{msgStatus,jdbcType=TINYINT}, #{errorCount,jdbcType=INTEGER}, 
      #{errorMsg,jdbcType=VARCHAR}, #{requestId,jdbcType=VARCHAR}, #{disable,jdbcType=BIT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{memberId,jdbcType=BIGINT}, 
      #{updateMemberId,jdbcType=BIGINT}, #{delFlag,jdbcType=BIT}, #{tenantId,jdbcType=BIGINT}, 
      #{dataNo,jdbcType=VARCHAR}, #{msg,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sbw.finance.biz.domain.MqMsg">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into mq_msg
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="mqTopic != null">
        mq_topic,
      </if>
      <if test="mqTag != null">
        mq_tag,
      </if>
      <if test="mqKey != null">
        mq_key,
      </if>
      <if test="msgClassName != null">
        msg_class_name,
      </if>
      <if test="msgStatus != null">
        msg_status,
      </if>
      <if test="errorCount != null">
        error_count,
      </if>
      <if test="errorMsg != null">
        error_msg,
      </if>
      <if test="requestId != null">
        request_id,
      </if>
      <if test="disable != null">
        disable,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="memberId != null">
        member_id,
      </if>
      <if test="updateMemberId != null">
        update_member_id,
      </if>
      <if test="delFlag != null">
        del_flag,
      </if>
      <if test="tenantId != null">
        tenant_id,
      </if>
      <if test="dataNo != null">
        data_no,
      </if>
      <if test="msg != null">
        msg,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="mqTopic != null">
        #{mqTopic,jdbcType=VARCHAR},
      </if>
      <if test="mqTag != null">
        #{mqTag,jdbcType=VARCHAR},
      </if>
      <if test="mqKey != null">
        #{mqKey,jdbcType=VARCHAR},
      </if>
      <if test="msgClassName != null">
        #{msgClassName,jdbcType=VARCHAR},
      </if>
      <if test="msgStatus != null">
        #{msgStatus,jdbcType=TINYINT},
      </if>
      <if test="errorCount != null">
        #{errorCount,jdbcType=INTEGER},
      </if>
      <if test="errorMsg != null">
        #{errorMsg,jdbcType=VARCHAR},
      </if>
      <if test="requestId != null">
        #{requestId,jdbcType=VARCHAR},
      </if>
      <if test="disable != null">
        #{disable,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="memberId != null">
        #{memberId,jdbcType=BIGINT},
      </if>
      <if test="updateMemberId != null">
        #{updateMemberId,jdbcType=BIGINT},
      </if>
      <if test="delFlag != null">
        #{delFlag,jdbcType=BIT},
      </if>
      <if test="tenantId != null">
        #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="dataNo != null">
        #{dataNo,jdbcType=VARCHAR},
      </if>
      <if test="msg != null">
        #{msg,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sbw.finance.biz.domain.MqMsg">
    update mq_msg
    <set>
      <if test="mqTopic != null">
        mq_topic = #{mqTopic,jdbcType=VARCHAR},
      </if>
      <if test="mqTag != null">
        mq_tag = #{mqTag,jdbcType=VARCHAR},
      </if>
      <if test="mqKey != null">
        mq_key = #{mqKey,jdbcType=VARCHAR},
      </if>
      <if test="msgClassName != null">
        msg_class_name = #{msgClassName,jdbcType=VARCHAR},
      </if>
      <if test="msgStatus != null">
        msg_status = #{msgStatus,jdbcType=TINYINT},
      </if>
      <if test="errorCount != null">
        error_count = #{errorCount,jdbcType=INTEGER},
      </if>
      <if test="errorMsg != null">
        error_msg = #{errorMsg,jdbcType=VARCHAR},
      </if>
      <if test="requestId != null">
        request_id = #{requestId,jdbcType=VARCHAR},
      </if>
      <if test="disable != null">
        disable = #{disable,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="memberId != null">
        member_id = #{memberId,jdbcType=BIGINT},
      </if>
      <if test="updateMemberId != null">
        update_member_id = #{updateMemberId,jdbcType=BIGINT},
      </if>
      <if test="delFlag != null">
        del_flag = #{delFlag,jdbcType=BIT},
      </if>
      <if test="tenantId != null">
        tenant_id = #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="dataNo != null">
        data_no = #{dataNo,jdbcType=VARCHAR},
      </if>
      <if test="msg != null">
        msg = #{msg,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.sbw.finance.biz.domain.MqMsg">
    update mq_msg
    set mq_topic = #{mqTopic,jdbcType=VARCHAR},
      mq_tag = #{mqTag,jdbcType=VARCHAR},
      mq_key = #{mqKey,jdbcType=VARCHAR},
      msg_class_name = #{msgClassName,jdbcType=VARCHAR},
      msg_status = #{msgStatus,jdbcType=TINYINT},
      error_count = #{errorCount,jdbcType=INTEGER},
      error_msg = #{errorMsg,jdbcType=VARCHAR},
      request_id = #{requestId,jdbcType=VARCHAR},
      disable = #{disable,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      member_id = #{memberId,jdbcType=BIGINT},
      update_member_id = #{updateMemberId,jdbcType=BIGINT},
      del_flag = #{delFlag,jdbcType=BIT},
      tenant_id = #{tenantId,jdbcType=BIGINT},
      data_no = #{dataNo,jdbcType=VARCHAR},
      msg = #{msg,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sbw.finance.biz.domain.MqMsg">
    update mq_msg
    set mq_topic = #{mqTopic,jdbcType=VARCHAR},
      mq_tag = #{mqTag,jdbcType=VARCHAR},
      mq_key = #{mqKey,jdbcType=VARCHAR},
      msg_class_name = #{msgClassName,jdbcType=VARCHAR},
      msg_status = #{msgStatus,jdbcType=TINYINT},
      error_count = #{errorCount,jdbcType=INTEGER},
      error_msg = #{errorMsg,jdbcType=VARCHAR},
      request_id = #{requestId,jdbcType=VARCHAR},
      disable = #{disable,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      member_id = #{memberId,jdbcType=BIGINT},
      update_member_id = #{updateMemberId,jdbcType=BIGINT},
      del_flag = #{delFlag,jdbcType=BIT},
      tenant_id = #{tenantId,jdbcType=BIGINT},
      data_no = #{dataNo,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="list" parameterType="com.sbw.mybatis.help.MyBatisWrapper" resultMap="BaseResultMap">
        <include refid="listSql"/>
    </select>
    <sql id="listSql">
        select
        <if test="selectBuilder == null">
            *
        </if>
        <if test="selectBuilder != null">
            <trim prefixOverrides="," suffixOverrides=",">
                ${selectBuilder}
            </trim>
        </if>
        from mq_msg
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="groupBySql != null">
            group by ${groupBySql}
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="rows != null">
            <if test="offset != null">
                limit ${offset}, ${rows}
            </if>
            <if test="offset == null">
                limit ${rows}
            </if>
        </if>
    </sql>
  <sql id="Example_Where_Clause">
   <where>
            <trim prefixOverrides="and | or">
                <foreach collection="oredCriteria" item="criteria">
                    <if test="criteria.valid">
                        <if test="criteria.andOrOr">
                            and
                        </if>
                        <if test="!criteria.andOrOr">
                            or
                        </if>
                        <trim prefix="(" prefixOverrides="and | or" suffix=")">
                            <foreach collection="criteria.criteria" item="criterion">
                                <choose>
                                    <when test="criterion.noValue">
                                        ${criterion.condition}
                                    </when>
                                    <when test="criterion.singleValue">
                                        ${criterion.condition} #{criterion.value, jdbcType=${criterion.jdbcType}}
                                    </when>
                                    <when test="criterion.betweenValue">
                                        ${criterion.condition} #{criterion.value, jdbcType=${criterion.jdbcType}} and #{criterion.secondValue, jdbcType=${criterion.jdbcType}}
                                    </when>
                                    <when test="criterion.listValue">
                                        ${criterion.condition}
                                        <foreach close=")" collection="criterion.value" item="listItem" open="("
                                                 separator=",">
                                            #{listItem, jdbcType=${criterion.jdbcType}}
                                        </foreach>
                                    </when>
                                </choose>
                            </foreach>
                        </trim>
                    </if>
                </foreach>
            </trim>
        </where></sql>
    <select id="topOne" parameterType="com.sbw.mybatis.help.MyBatisWrapper" resultMap="BaseResultMap">
    select
    <if test="selectBuilder != null">
      <trim prefixOverrides="," suffixOverrides=",">
         ${selectBuilder} 
      </trim>
    </if>
    from mq_msg
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>

  <select id="count" parameterType="com.sbw.mybatis.help.MyBatisWrapper" resultType="java.lang.Integer">
        <include refid="countSql"/>
    </select>
    <sql id="countSql">
        select count(*) total_count from mq_msg
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </sql>
  <update id="updateField" parameterType="com.sbw.mybatis.help.MyBatisWrapper">
    update mq_msg 
    set 
    <trim prefixOverrides="," suffixOverrides=",">
         ${example.updateSql} 
      </trim>
     <if test="example.updateSql != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <sql id="Update_By_Example_Where_Clause">
   <where>
            <trim prefixOverrides="and | or">
                <foreach collection="example.oredCriteria" item="criteria">
                    <if test="criteria.andOrOr">
                        and
                    </if>
                    <if test="!criteria.andOrOr">
                        or
                    </if>
                    <if test="criteria.valid">
                        <trim prefix="(" prefixOverrides="and" suffix=")">
                            <foreach collection="criteria.criteria" item="criterion">
                                <choose>
                                    <when test="criterion.noValue">
                                        ${criterion.condition}
                                    </when>
                                    <when test="criterion.singleValue">
                                        ${criterion.condition} #{criterion.value, jdbcType=${criterion.jdbcType}}
                                    </when>
                                    <when test="criterion.betweenValue">
                                        ${criterion.condition} #{criterion.value, jdbcType=${criterion.jdbcType}} and #{criterion.secondValue, jdbcType=${criterion.jdbcType}}
                                    </when>
                                    <when test="criterion.listValue">
                                        ${criterion.condition}
                                        <foreach close=")" collection="criterion.value" item="listItem" open="("
                                                 separator=",">
                                            #{listItem, jdbcType=${criterion.jdbcType}}
                                        </foreach>
                                    </when>
                                </choose>
                            </foreach>
                        </trim>
                    </if>
                </foreach>
            </trim>
        </where></sql>
   <update id="updateFieldBatch" parameterType="java.util.List">
           <foreach collection="list" index="index" item="example" separator=";">
               update mq_msg 
                   set 
               <trim prefixOverrides="," suffixOverrides=",">
                   ${example.updateSql} 
               </trim>
               <if test="example != null">
                   <include refid="Update_By_Example_Where_Clause" />
               </if>           </foreach>
  </update>
    <select id="get" parameterType="com.sbw.mybatis.help.MyBatisWrapper" resultMap="BaseResultMap">
    select
    <if test="selectBuilder != null">
      <trim prefixOverrides="," suffixOverrides=",">
         ${selectBuilder} 
      </trim>
    </if>
    from mq_msg
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <update id="updateBatchSelective" parameterType="java.util.List">
    update mq_msg
   <trim prefix="set" suffixOverrides=",">
      <trim prefix="id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.id != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.id,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>
  </trim>
   <trim prefix="set" suffixOverrides=",">
      <trim prefix="mq_topic = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.mqTopic != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.mqTopic,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
  </trim>
   <trim prefix="set" suffixOverrides=",">
      <trim prefix="mq_tag = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.mqTag != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.mqTag,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
  </trim>
   <trim prefix="set" suffixOverrides=",">
      <trim prefix="mq_key = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.mqKey != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.mqKey,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
  </trim>
   <trim prefix="set" suffixOverrides=",">
      <trim prefix="msg_class_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.msgClassName != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.msgClassName,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
  </trim>
   <trim prefix="set" suffixOverrides=",">
      <trim prefix="msg_status = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.msgStatus != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.msgStatus,jdbcType=TINYINT}
          </if>
        </foreach>
      </trim>
  </trim>
   <trim prefix="set" suffixOverrides=",">
      <trim prefix="error_count = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.errorCount != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.errorCount,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
  </trim>
   <trim prefix="set" suffixOverrides=",">
      <trim prefix="error_msg = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.errorMsg != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.errorMsg,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
  </trim>
   <trim prefix="set" suffixOverrides=",">
      <trim prefix="request_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.requestId != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.requestId,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
  </trim>
   <trim prefix="set" suffixOverrides=",">
      <trim prefix="disable = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.disable != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.disable,jdbcType=BIT}
          </if>
        </foreach>
      </trim>
  </trim>
   <trim prefix="set" suffixOverrides=",">
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.createTime != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.createTime,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
  </trim>
   <trim prefix="set" suffixOverrides=",">
      <trim prefix="update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.updateTime != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.updateTime,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
  </trim>
   <trim prefix="set" suffixOverrides=",">
      <trim prefix="member_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.memberId != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.memberId,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>
  </trim>
   <trim prefix="set" suffixOverrides=",">
      <trim prefix="update_member_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.updateMemberId != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.updateMemberId,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>
  </trim>
   <trim prefix="set" suffixOverrides=",">
      <trim prefix="del_flag = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.delFlag != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.delFlag,jdbcType=BIT}
          </if>
        </foreach>
      </trim>
  </trim>
   <trim prefix="set" suffixOverrides=",">
      <trim prefix="tenant_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.tenantId != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.tenantId,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>
  </trim>
   <trim prefix="set" suffixOverrides=",">
      <trim prefix="data_no = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.dataNo != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.dataNo,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
  </trim>
   <trim prefix="set" suffixOverrides=",">
      <trim prefix="msg = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.msg != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.msg,jdbcType=LONGVARCHAR}
          </if>
        </foreach>
      </trim>
  </trim>
  where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=BIGINT}
    </foreach>
</update>

  <insert id="insertBatch" keyColumn="id" keyProperty="id" parameterType="java.util.Collection" useGeneratedKeys="true">
    insert into mq_msg (mq_topic, mq_tag, mq_key, msg_class_name, msg_status, error_count, error_msg, request_id, disable, create_time, update_time, member_id, update_member_id, del_flag, tenant_id, data_no, msg) values
    <foreach collection="list" index="index" item="item" separator=",">
      <trim prefix="(" suffix=")" suffixOverrides=",">
        #{item.mqTopic, jdbcType=VARCHAR},
        #{item.mqTag, jdbcType=VARCHAR},
        #{item.mqKey, jdbcType=VARCHAR},
        #{item.msgClassName, jdbcType=VARCHAR},
        #{item.msgStatus, jdbcType=TINYINT},
        #{item.errorCount, jdbcType=INTEGER},
        #{item.errorMsg, jdbcType=VARCHAR},
        #{item.requestId, jdbcType=VARCHAR},
        #{item.disable, jdbcType=BIT},
        #{item.createTime, jdbcType=TIMESTAMP},
        #{item.updateTime, jdbcType=TIMESTAMP},
        #{item.memberId, jdbcType=BIGINT},
        #{item.updateMemberId, jdbcType=BIGINT},
        #{item.delFlag, jdbcType=BIT},
        #{item.tenantId, jdbcType=BIGINT},
        #{item.dataNo, jdbcType=VARCHAR},
        #{item.msg, jdbcType=LONGVARCHAR},
      </trim>
    </foreach>
  </insert>
  <insert id="insertBatchSelective" keyColumn="id" parameterType="java.util.List">
    <foreach collection="list" index="index" item="item" separator=";">
      insert into mq_msg 
      <trim prefix="(" suffix=")" suffixOverrides=",">
        <if test="item.mqTopic != null">
          mq_topic,
        </if>
        <if test="item.mqTag != null">
          mq_tag,
        </if>
        <if test="item.mqKey != null">
          mq_key,
        </if>
        <if test="item.msgClassName != null">
          msg_class_name,
        </if>
        <if test="item.msgStatus != null">
          msg_status,
        </if>
        <if test="item.errorCount != null">
          error_count,
        </if>
        <if test="item.errorMsg != null">
          error_msg,
        </if>
        <if test="item.requestId != null">
          request_id,
        </if>
        <if test="item.disable != null">
          disable,
        </if>
        <if test="item.createTime != null">
          create_time,
        </if>
        <if test="item.updateTime != null">
          update_time,
        </if>
        <if test="item.memberId != null">
          member_id,
        </if>
        <if test="item.updateMemberId != null">
          update_member_id,
        </if>
        <if test="item.delFlag != null">
          del_flag,
        </if>
        <if test="item.tenantId != null">
          tenant_id,
        </if>
        <if test="item.dataNo != null">
          data_no,
        </if>
        <if test="item.msg != null">
          msg,
        </if>
      </trim>
       values 
      <trim prefix="(" suffix=")" suffixOverrides=",">
        <if test="item.mqTopic != null">
          #{item.mqTopic, jdbcType=VARCHAR},
        </if>
        <if test="item.mqTag != null">
          #{item.mqTag, jdbcType=VARCHAR},
        </if>
        <if test="item.mqKey != null">
          #{item.mqKey, jdbcType=VARCHAR},
        </if>
        <if test="item.msgClassName != null">
          #{item.msgClassName, jdbcType=VARCHAR},
        </if>
        <if test="item.msgStatus != null">
          #{item.msgStatus, jdbcType=TINYINT},
        </if>
        <if test="item.errorCount != null">
          #{item.errorCount, jdbcType=INTEGER},
        </if>
        <if test="item.errorMsg != null">
          #{item.errorMsg, jdbcType=VARCHAR},
        </if>
        <if test="item.requestId != null">
          #{item.requestId, jdbcType=VARCHAR},
        </if>
        <if test="item.disable != null">
          #{item.disable, jdbcType=BIT},
        </if>
        <if test="item.createTime != null">
          #{item.createTime, jdbcType=TIMESTAMP},
        </if>
        <if test="item.updateTime != null">
          #{item.updateTime, jdbcType=TIMESTAMP},
        </if>
        <if test="item.memberId != null">
          #{item.memberId, jdbcType=BIGINT},
        </if>
        <if test="item.updateMemberId != null">
          #{item.updateMemberId, jdbcType=BIGINT},
        </if>
        <if test="item.delFlag != null">
          #{item.delFlag, jdbcType=BIT},
        </if>
        <if test="item.tenantId != null">
          #{item.tenantId, jdbcType=BIGINT},
        </if>
        <if test="item.dataNo != null">
          #{item.dataNo, jdbcType=VARCHAR},
        </if>
        <if test="item.msg != null">
          #{item.msg, jdbcType=LONGVARCHAR},
        </if>
      </trim>
    </foreach>
  </insert>
</mapper>